package com.Lomesh.controller;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.Lomesh.model.Category;

@Controller
public class CategoryController {

	public static ArrayList<Category> listreturn(List<String> trans) {
		ArrayList<Category> categorylist = new ArrayList<Category>();
		String[] words;
		for (int i = 0; i < trans.size(); i++) {
			Category cat = new Category();
			words = trans.get(i).split(";");

			cat.setId(words[0]);
			cat.setName(words[1]);
			cat.setDescription(words[2]);
			categorylist.add(cat);
		}
		return categorylist;
	}

	public void deletefile(String id) throws IOException {

		File file = new File("D:\\Programs\\ImageGallery\\Gallery\\src\\main\\resources\\Categorylist.txt");
List<String> trans = new ArrayList<String>();
		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		ArrayList<Category> categorylist = new ArrayList<Category>();
		categorylist = listreturn(trans);
		ArrayList<Category> newcategorylist = new ArrayList<Category>();

		BufferedWriter writer = new BufferedWriter(new FileWriter(file));

		for (Category temp : categorylist) {

			if (id.equals(temp.getId())) {
			} else {

				newcategorylist.add(temp);

			}
		}

		int n = 0;
		for (Category temp : newcategorylist) {
			writer.write(temp.getId() + ';' + temp.getName() + ';' + temp.getDescription());
			if (n != newcategorylist.size() - 1) {
				writer.write(System.getProperty("line.separator"));
			}
			n = n + 1;
		}

		writer.close();
	}

	public void writefile(@Valid Category category) throws IOException {

		
		
		File file = new File("D:\\Programs\\ImageGallery\\Gallery\\src\\main\\resources\\Categorylist.txt");

		BufferedWriter writer = new BufferedWriter(new FileWriter(file, true));
		if (file.length() != 0) {
			writer.append(System.getProperty("line.separator"));
		}

		if(category.getDescription()=="") {
			category.setDescription("null");
		}
		writer.append(category.getId() + ';' + category.getName() + ';' + category.getDescription());

		writer.close();
	}

	@ModelAttribute
	public Category returnObject() {
		return new Category();
	}

	protected static List<String> readFile(String filename) {
		List<String> records = new ArrayList<String>();
		try {
			BufferedReader reader = new BufferedReader(new FileReader(filename));
			String line;
			while ((line = reader.readLine()) != null) {
				records.add(line);
			}
			reader.close();
			return records;
		} catch (Exception e) {
			System.err.format("Exception occurred trying to read '%s'.", filename);
			e.printStackTrace();
			return null;
		}
	}
	@RequestMapping(value = "/categorylist")
	public ModelAndView Categorylist() throws IOException {

		List<String> trans = new ArrayList<String>();
		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		ArrayList<Category> categorylist = new ArrayList<Category>();
		categorylist = listreturn(trans);

		ModelAndView mv = new ModelAndView("adminpage");
		mv.addObject("listcat", 0);
		mv.addObject("categoryList", categorylist);
		return mv;
	}

	@RequestMapping("/Addcategory")
	public ModelAndView AddcategoryPage() {

		List<String> trans = new ArrayList<String>();
		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		ArrayList<Category> categorylist = new ArrayList<Category>();
		categorylist = listreturn(trans);

		ModelAndView mv = new ModelAndView("adminpage");
		mv.addObject("add", 0);
		mv.addObject("categoryList", categorylist);
		mv.addObject("listcat", 0);
		return mv;
	}

	@RequestMapping(value = "/Categoryreg", method = RequestMethod.POST)
	public ModelAndView Categoryregister(@Valid @ModelAttribute("category") Category category, BindingResult result)
			throws IOException {

		List<String> trans = new ArrayList<String>();
		ArrayList<Category> categorylist = new ArrayList<Category>();

		ModelAndView mv = new ModelAndView("adminpage");
		if (result.hasErrors()) {
			mv.addObject("add", 0);
		} else {
			writefile(category);

		}

		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		categorylist = listreturn(trans);

		mv.addObject("categoryList", categorylist);
		mv.addObject("listcat", 0);
		return mv;
	}

	@RequestMapping(value = "/Updatecat{id}")
	public ModelAndView UpdatecatPage(@PathVariable("id") String id) throws Exception {

		List<String> trans = new ArrayList<String>();
		ArrayList<Category> categorylist = new ArrayList<Category>();

		ModelAndView mv = new ModelAndView("adminpage");

		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		categorylist = listreturn(trans);

		for (Category temp : categorylist) {
			if (id.equals(temp.getId())) {
				mv.addObject("cat", temp);

			}
		}

		mv.addObject("add", 0);
		mv.addObject("edit", 1);
		mv.addObject("categoryList", categorylist);
		mv.addObject("listcat", 0);
		return mv;
	}

	@RequestMapping(value = "/categoryupdate", method = RequestMethod.POST)
	public ModelAndView Updatecategory(@Valid @ModelAttribute("category") Category cat,
			@RequestParam("description") String description, BindingResult result) throws IOException {
		List<String> trans = new ArrayList<String>();
		ArrayList<Category> categorylist = new ArrayList<Category>();
		cat.setDescription(description);
		deletefile(cat.getId());
		writefile(cat);
		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		categorylist = listreturn(trans);
		ModelAndView mv = new ModelAndView("adminpage");
		mv.addObject("categoryList", categorylist);
		mv.addObject("listcat", 0);
		return mv;
	}

	@RequestMapping(value = "/Deletecategory{id}")
	public ModelAndView deleteCategory(@PathVariable("id") String id) throws Exception {

		List<String> trans = new ArrayList<String>();
		ArrayList<Category> categorylist = new ArrayList<Category>();
		deletefile(id);

		trans = readFile(
				"D:\\Programs\\ImageGallery\\Gallery\\src\\main\\java\\com\\Lomesh\\data\\Categorylist.txt");

		categorylist = listreturn(trans);
		ModelAndView mv = new ModelAndView("adminpage");
		mv.addObject("categoryList", categorylist);
		mv.addObject("listcat", 0);
		return mv;
	}

}
